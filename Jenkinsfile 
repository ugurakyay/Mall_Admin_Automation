pipeline {
    agent any

    environment {
        PYTHON_ENV = "${WORKSPACE}/.venv" // Sanal ortam dizini
    }

    stages {
        stage('Checkout') {
            steps {
                // Projeyi GitHub'dan çekiyoruz
                git 'https://github.com/ugurakyay/Mall_Admin_Automation.git'
            }
        }

        stage('Setup Python Environment') {
            steps {
                // Python sanal ortamı oluştur
                sh 'python3 -m venv ${PYTHON_ENV}'

                // Sanal ortamı aktive et ve gerekli paketleri yükle
                sh '''
                source ${PYTHON_ENV}/bin/activate
                pip install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                // Testleri çalıştır
                sh '''
                source ${PYTHON_ENV}/bin/activate
                pytest --alluredir=reports/allure-results
                '''
            }
        }

        stage('Generate Allure Report') {
            steps {
                // Allure raporlarını oluştur
                allure([
                    includeProperties: false,
                    jdk: '',
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'reports/allure-results']]
                ])
            }
        }
    }

    post {
        always {
            // Sonucuna bakılmaksızın çalıştırılacak adımlar
            archiveArtifacts artifacts: 'reports/allure-results/**', allowEmptyArchive: true
            junit 'reports/allure-results/*.xml'
        }
        failure {
            // Eğer pipeline başarısız olursa yapılacaklar
            mail to: 'your-email@example.com',
                 subject: "Pipeline Failed: ${currentBuild.fullDisplayName}",
                 body: "Something went wrong. Please check the logs for more details."
        }
    }
}
