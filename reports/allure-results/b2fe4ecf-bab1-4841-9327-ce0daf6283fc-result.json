{"name": "test_valid_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_login.TestLogin object at 0x105a5dcd0>\n\n    @allure.story('Successful Login')\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_valid_login(self):\n        with allure.step(\"Entering username\"):\n            self.login_page.enter_username(USERNAME)\n        with allure.step(\"Entering password\"):\n            self.login_page.enter_password(PASSWORD)\n        with allure.step(\"Clicking checkbox\"):\n            self.login_page.click_checkbox()  # Checkbox'a tıklama işlemi\n        with allure.step(\"Clicking pop-up confirmation button\"):\n            self.login_page.click_popup_button()  # Pop-up onay butonuna tıklama\n        with allure.step(\"Clicking login button\"):\n>           self.login_page.click_login()  # Login butonuna tıklama\n\nTests/test_login.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:39: in click_login\n    login_button_element = wait.until(EC.element_to_be_clickable(self.login_button))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c12853f012215d14294436f56192fd47\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x105340d30>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Entering username", "status": "passed", "start": 1726635272603, "stop": 1726635274726}, {"name": "Entering password", "status": "passed", "start": 1726635274727, "stop": 1726635274771}, {"name": "Clicking checkbox", "status": "passed", "start": 1726635274771, "stop": 1726635276822}, {"name": "Clicking pop-up confirmation button", "status": "passed", "start": 1726635276823, "stop": 1726635280017}, {"name": "Clicking login button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/ugurakyay/Desktop/easyPoint_WEB_Automation/Admin_Panel_Automation/Tests/test_login.py\", line 29, in test_valid_login\n    self.login_page.click_login()  # Login butonuna tıklama\n  File \"/Users/ugurakyay/Desktop/easyPoint_WEB_Automation/Admin_Panel_Automation/pages/login_page.py\", line 39, in click_login\n    login_button_element = wait.until(EC.element_to_be_clickable(self.login_button))\n  File \"/Users/ugurakyay/Desktop/easyPoint_WEB_Automation/Admin_Panel_Automation/.venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1726635280017, "stop": 1726635290022}], "start": 1726635272603, "stop": 1726635290034, "uuid": "d3618581-74ec-4024-b709-2366838d7c63", "historyId": "13e5c7e681f4390d8ce9b5e655a76296", "testCaseId": "13e5c7e681f4390d8ce9b5e655a76296", "fullName": "Tests.test_login.TestLogin#test_valid_login", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Login Feature"}, {"name": "story", "value": "Successful Login"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "ugur-MacBook-Pro.local"}, {"name": "thread", "value": "12715-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_login"}]}